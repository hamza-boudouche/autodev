name: build and push docker image

on:
  push:
    branches:
      - "main"
      - "e2e-test"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      # -
      #   name: Login to Docker Hub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/autodev:latest
          outputs: type=docker,dest=/tmp/autodev.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: autodev
          path: /tmp/autodev.tar
  e2e-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.5.0
      -
        name: check cluster nodes to verify readiness
        run: |
          kubectl label nodes chart-testing-control-plane ingress-ready=true
          kubectl get nodes
      -
        name: install nginx ingress controller
        run: |
          kubectl apply -f \
            https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml
      -
        name: wait for nginx ingress controller to be ready
        run: |
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=90s
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: autodev
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/autodev.tar
          docker image ls -a

      -
        name: Deploy Autodev
        run: kubectl apply -f ./k8s-manifests/minimal-ingress.yaml

      -
        name: Wait for Autodev deployment to be ready
        run: |
          kubectl wait --namespace default \
            --for=condition=ready pod \
            --selector=app=autodev \
            --timeout=90s
      -
        name: Print statuses of ressources
        run: |
          kubectl -n default get pods
          kubectl -n default get deployments
          kubectl -n default logs -l app=autodev --tail -1
          kubectl -n default get services
          kubectl -n default get ingresses

      -
        name: Configure host
        run: sudo echo "127.0.0.1   www.hamzaboudouche.tech" >> /etc/hosts
      -
        name: Check if the server is working
        run: |
          curl http://www.hamzaboudouche.tech/healthcheck

